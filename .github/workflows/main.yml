name: Snowflake MLOps Pipeline (Classic Auth)

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - mlops

permissions:
  contents: read

jobs:
  run-mlops-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Snowflake CLI
        uses: snowflakedb/snowflake-cli-action@v2.0
        with:
          use-pip-cache: true

      - name: Configure Snowflake Connection
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        run: |
          echo "ðŸ”§ Adding Snowflake CLI connection..."
          snow connection add myconn \
            --account $SNOWFLAKE_ACCOUNT \
            --username $SNOWFLAKE_USER \
            --password "$SNOWFLAKE_PASSWORD" \
            --warehouse $SNOWFLAKE_WAREHOUSE \
            --database $SNOWFLAKE_DATABASE \
            --schema $SNOWFLAKE_SCHEMA

          echo "âœ… Connection 'myconn' added successfully!"
          snow connection list

      - name: Test Snowflake Connection
        run: |
          echo "ðŸ”— Testing Snowflake connection..."
          snow -c myconn sql -q "SELECT CURRENT_USER(), CURRENT_ACCOUNT(), CURRENT_REGION();"

      - name: Trigger Snowflake ML Pipeline
        run: |
          echo "ðŸš€ Executing ML pipeline task..."
          snow -c myconn sql -q "
            USE WAREHOUSE MLOPS_WH;
            USE DATABASE POWERCONSUMPTION;
            USE SCHEMA PUBLIC;
            EXECUTE TASK TASK_1_DATA_INGESTION;
          "

      - name: Check Task Execution Status
        run: |
          echo "ðŸ“Š Checking latest task status..."
          snow -c myconn sql -q "
            SELECT NAME, STATE, COMPLETED_TIME
            FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY())
            WHERE NAME = 'TASK_1_DATA_INGESTION'
            ORDER BY COMPLETED_TIME DESC
            LIMIT 1;
          "

      - name: Download Latest ONNX Model
        run: |
          echo "ðŸ“¥ Downloading latest ONNX model from stage..."
          mkdir -p models
          snow -c myconn sql -q "
            USE WAREHOUSE MLOPS_WH;
            USE DATABASE POWERCONSUMPTION;
            USE SCHEMA PUBLIC;
            GET @ML_MODELS_STAGE PATTERN='.*onnx' FILE://models;
          "
          echo "âœ… Model(s) downloaded to ./models"

      - name: Upload Model as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: latest-onnx-model
          path: models/
