name: Deploy Latest ONNX Model from Snowflake

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - mlops

permissions:
  contents: write

jobs:
  deploy-latest-onnx:
    runs-on: ubuntu-latest

    steps:
      # --------------------------
      # Step 1: Checkout Repository
      # --------------------------
      - name: Checkout Repository
        uses: actions/checkout@v4

      # --------------------------
      # Step 2: Install Snowflake CLI
      # --------------------------
      - name: Install Snowflake CLI
        uses: snowflakedb/snowflake-cli-action@v2.0

      # --------------------------
      # Step 3: Verify CLI Version
      # --------------------------
      - name: Verify Snowflake CLI Version
        shell: bash
        run: |
          echo "🧩 Checking installed Snowflake CLI version..."
          snow --version

      # --------------------------
      # Step 4: Configure Snowflake Connection (env-based)
      # --------------------------
      - name: Configure Snowflake Connection
        shell: bash
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        run: |
          echo "🔧 Configuring Snowflake connection..."
          export SNOWFLAKE_ACCOUNT
          export SNOWFLAKE_USER
          export SNOWFLAKE_PASSWORD
          export SNOWFLAKE_ROLE
          export SNOWFLAKE_WAREHOUSE
          export SNOWFLAKE_DATABASE
          export SNOWFLAKE_SCHEMA

          snow connection add --connection-name myconn --use-env
          echo "✅ Connection configured successfully!"
          snow connection list

      # --------------------------
      # Step 5: Identify Latest ONNX Model File
      # --------------------------
      - name: Identify Latest ONNX File
        id: latest_model
        shell: bash
        run: |
          echo "🔍 Fetching latest ONNX model file name..."
          MODEL_FILE=$(snow -c myconn sql -q "
            LIST @ML_MODELS_STAGE;
          " --output-format plain | grep '.onnx' | sort -k6,6r | head -n1 | awk '{print $1}' | tr -d '[:space:]')
          echo "MODEL_FILE=${MODEL_FILE}" >> $GITHUB_ENV
          echo "✅ Latest model: ${MODEL_FILE}"

      # --------------------------
      # Step 6: Download the Latest ONNX Model
      # --------------------------
      - name: Download Latest ONNX Model
        shell: bash
        run: |
          echo "📥 Downloading ${MODEL_FILE} from Snowflake stage..."
          mkdir -p models
          snow -c myconn sql -q "
            GET @ML_MODELS_STAGE/${MODEL_FILE} FILE://models;
          "
          echo "✅ Model files downloaded:"
          ls -lh models

      # --------------------------
      # Step 7: Commit and Push Latest Model
      # --------------------------
      - name: Commit and Push Latest Model
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "💾 Committing latest ONNX model ${MODEL_FILE}..."
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add models/
          git commit -m "Deploy latest ONNX model: ${MODEL_FILE}" || echo "No new model to commit."
          git push



