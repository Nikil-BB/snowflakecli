name: Deploy Latest ONNX Model from Snowflake

on:
  push:
    branches: [main, mlops]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy-latest-onnx:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # --------------------------
      # Step 1: Install Snowflake CLI (v3.x compatible)
      # --------------------------
      - name: Install Snowflake CLI
        shell: bash
        run: |
          echo "üêç Installing Snowflake CLI..."
          python3 -m pip install --upgrade pip
          pip install --upgrade "snowflake-cli-labs>=3.12.0"
          snow --version

      # --------------------------
      # Step 2: Configure Snowflake Connection (new syntax)
      # --------------------------
      - name: Configure Snowflake Connection
        shell: bash
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}   # e.g. SZBYXJW-ZU11428.snowflakecomputing.com
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        run: |
          echo "üîß Creating Snowflake CLI connection (v3 syntax)..."
          snow connection add \
            --name myconn \
            --host "${SNOWFLAKE_ACCOUNT}" \
            --username "${SNOWFLAKE_USER}" \
            --password "${SNOWFLAKE_PASSWORD}" \
            --warehouse "${SNOWFLAKE_WAREHOUSE}" \
            --database "${SNOWFLAKE_DATABASE}" \
            --schema "${SNOWFLAKE_SCHEMA}" \
            --rolename "${SNOWFLAKE_ROLE}"

          echo "‚úÖ Connection created successfully!"
          snow connection list

      # --------------------------
      # Step 3: Use connection to fetch and commit latest ONNX model
      # --------------------------
      - name: Fetch and Deploy Latest ONNX Model
        shell: bash
        run: |
          echo "üîó Using configured Snowflake connection (myconn)..."
          echo "üîç Finding latest ONNX model..."

          MODEL_FILE=$(snow -c myconn sql -q "LIST @ML_MODELS_STAGE;" --format CSV | grep '.onnx' | sort -t',' -k6,6r | head -n1 | cut -d',' -f1 | tr -d '"')
          
          if [ -z "$MODEL_FILE" ]; then
            echo "‚ùå No ONNX model found in ML_MODELS_STAGE!"
            exit 1
          fi

          echo "‚úÖ Latest model identified: ${MODEL_FILE}"

          echo "üì• Downloading ${MODEL_FILE}..."
          mkdir -p models
          snow -c myconn sql -q "
            USE DATABASE POWERCONSUMPTION;
            USE SCHEMA PUBLIC;
            GET @ML_MODELS_STAGE/${MODEL_FILE} FILE://models;
          " --format CSV

          echo "‚úÖ Model files downloaded:"
          ls -lh models

          echo "üíæ Committing model to repository..."
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add models/
          git commit -m "Deploy latest ONNX model: ${MODEL_FILE}" || echo "No new model to commit."
          git push


